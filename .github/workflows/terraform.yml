name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      tfvars_file:
        description: 'Path to the .tfvars file'
        required: true
        default: 'dev.tfvars'
      action:
        type: choice
        description: 'Plan, Apply, or Destroy'
        options:
        - plan
        - apply
        - destroy
        required: true
        default: 'apply'

permissions:
  id-token: write  # Required for OIDC
  contents: read

env:
  AWS_REGION: us-east-1

jobs:
  CheckOut-Repo:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

  Assume-Role-With-OIDC:
    runs-on: ubuntu-latest
    needs: CheckOut-Repo

    steps:
    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ secrets.oidc_role_dev_arn }}
        aws-region: ${{ env.AWS_REGION }}

  Setup-Terraform:
    runs-on: ubuntu-latest
    needs: Assume-Role-With-OIDC

    steps:
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.9.3

  Terraform-Init:
    runs-on: ubuntu-latest
    needs: Setup-Terraform

    steps:
    - name: Terraform Init
      working-directory: eks
      run: terraform init

  Terraform-Formatting-Validating:
    runs-on: ubuntu-latest
    needs: Terraform-Init

    steps:
    - name: Terraform Format
      working-directory: eks
      run: terraform fmt

    - name: Terraform Validate
      working-directory: eks
      run: terraform validate

  Terraform-Action:
    runs-on: ubuntu-latest
    needs: Terraform-Formatting-Validating

    steps:
    - name: Terraform Plan
      if: ${{ github.event.inputs.action == 'plan' }}
      working-directory: eks
      run: |
        terraform plan -var-file=${{ github.event.inputs.tfvars_file }} -input=false

    - name: Terraform Apply
      if: ${{ github.event.inputs.action == 'apply' }}
      working-directory: eks
      run: |
        terraform apply -auto-approve -var-file=${{ github.event.inputs.tfvars_file }} -input=false

    - name: Terraform Destroy
      if: ${{ github.event.inputs.action == 'destroy' }}
      working-directory: eks
      run: |
        terraform destroy -auto-approve -var-file=${{ github.event.inputs.tfvars_file }} -input=false